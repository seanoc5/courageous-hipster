package com.oconeco.courageous.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ContentFragmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContentFragmentAllPropertiesEquals(ContentFragment expected, ContentFragment actual) {
        assertContentFragmentAutoGeneratedPropertiesEquals(expected, actual);
        assertContentFragmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContentFragmentAllUpdatablePropertiesEquals(ContentFragment expected, ContentFragment actual) {
        assertContentFragmentUpdatableFieldsEquals(expected, actual);
        assertContentFragmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContentFragmentAutoGeneratedPropertiesEquals(ContentFragment expected, ContentFragment actual) {
        assertThat(expected)
            .as("Verify ContentFragment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContentFragmentUpdatableFieldsEquals(ContentFragment expected, ContentFragment actual) {
        assertThat(expected)
            .as("Verify ContentFragment relevant properties")
            .satisfies(e -> assertThat(e.getLabel()).as("check label").isEqualTo(actual.getLabel()))
            .satisfies(e -> assertThat(e.getText()).as("check text").isEqualTo(actual.getText()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getStructuredContent()).as("check structuredContent").isEqualTo(actual.getStructuredContent()))
            .satisfies(e -> assertThat(e.getStartPos()).as("check startPos").isEqualTo(actual.getStartPos()))
            .satisfies(e -> assertThat(e.getEndPos()).as("check endPos").isEqualTo(actual.getEndPos()))
            .satisfies(e -> assertThat(e.getStartTermNum()).as("check startTermNum").isEqualTo(actual.getStartTermNum()))
            .satisfies(e -> assertThat(e.getEndTermNum()).as("check endTermNum").isEqualTo(actual.getEndTermNum()))
            .satisfies(e -> assertThat(e.getSubtype()).as("check subtype").isEqualTo(actual.getSubtype()))
            .satisfies(e -> assertThat(e.getLanguage()).as("check language").isEqualTo(actual.getLanguage()))
            .satisfies(e -> assertThat(e.getDateCreated()).as("check dateCreated").isEqualTo(actual.getDateCreated()))
            .satisfies(e -> assertThat(e.getLastUpdated()).as("check lastUpdated").isEqualTo(actual.getLastUpdated()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContentFragmentUpdatableRelationshipsEquals(ContentFragment expected, ContentFragment actual) {
        assertThat(expected)
            .as("Verify ContentFragment relationships")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getContent()).as("check content").isEqualTo(actual.getContent()))
            .satisfies(e -> assertThat(e.getContext()).as("check context").isEqualTo(actual.getContext()))
            .satisfies(e -> assertThat(e.getTopic()).as("check topic").isEqualTo(actual.getTopic()));
    }
}
