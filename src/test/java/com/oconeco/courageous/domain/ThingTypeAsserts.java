package com.oconeco.courageous.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ThingTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThingTypeAllPropertiesEquals(ThingType expected, ThingType actual) {
        assertThingTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertThingTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThingTypeAllUpdatablePropertiesEquals(ThingType expected, ThingType actual) {
        assertThingTypeUpdatableFieldsEquals(expected, actual);
        assertThingTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThingTypeAutoGeneratedPropertiesEquals(ThingType expected, ThingType actual) {
        assertThat(expected)
            .as("Verify ThingType auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThingTypeUpdatableFieldsEquals(ThingType expected, ThingType actual) {
        assertThat(expected)
            .as("Verify ThingType relevant properties")
            .satisfies(e -> assertThat(e.getLabel()).as("check label").isEqualTo(actual.getLabel()))
            .satisfies(e -> assertThat(e.getParentClass()).as("check parentClass").isEqualTo(actual.getParentClass()))
            .satisfies(e -> assertThat(e.getDescrption()).as("check descrption").isEqualTo(actual.getDescrption()))
            .satisfies(e -> assertThat(e.getDateCreated()).as("check dateCreated").isEqualTo(actual.getDateCreated()))
            .satisfies(e -> assertThat(e.getLastUpdated()).as("check lastUpdated").isEqualTo(actual.getLastUpdated()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThingTypeUpdatableRelationshipsEquals(ThingType expected, ThingType actual) {
        // empty method
    }
}
